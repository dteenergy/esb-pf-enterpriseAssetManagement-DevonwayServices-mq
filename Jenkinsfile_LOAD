pipeline {
  agent any
    stages {

	stage('Checkout Code'){
            steps{
                checkout([$class: 'GitSCM', branches: [[name: '*/test']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: '.']], submoduleCfg: [], userRemoteConfigs: [[url: 'git@github.com:dteenergy/esb-pf-enterpriseAssetManagement-DevonwayServices-mq.git']]])
            }
       }
	stage('IIB MQ Objects Creation on ESBL01') {
		steps{
		script{
		     def remote = [:]
			remote.name = "AIX10018"
			remote.host = "aix10018.dteco.com"
			remote.allowAnyHosts = true
			remote.user = "esbadm"
			remote.logLevel = "FINEST"
			withCredentials([sshUserPrivateKey(credentialsId: 'esbci4', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')]) {
			remote.identityFile = identity
			sshPut remote: remote, from: 'deploymq.sh', into: './deploymq.sh'
			sshCommand remote: remote, command: "ls -ltr"
			sshCommand remote: remote, command: "chmod 750 ./deploymq.sh"
           	sshCommand remote: remote, command: "sh ./deploymq.sh ESBL01 LOAD"
			sshRemove remote: remote, path: "deploymq.sh"
		}
		}
        }
		}
		stage('IIB MQ Objects Creation on ESBL02') {
		steps{
		script{
		     def remote = [:]
			remote.name = "AIX10019"
			remote.host = "AIX10019.dteco.com"
			remote.allowAnyHosts = true
			remote.user = "esbadm"
			remote.logLevel = "FINEST"
			withCredentials([sshUserPrivateKey(credentialsId: 'esbci4', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')]) {
			remote.identityFile = identity
			sshPut remote: remote, from: 'deploymq.sh', into: './deploymq.sh'
			sshCommand remote: remote, command: "ls -ltr"
			sshCommand remote: remote, command: "chmod 750 ./deploymq.sh"
           		sshCommand remote: remote, command: "sh ./deploymq.sh ESBL02 LOAD"
			sshRemove remote: remote, path: "deploymq.sh"
		}
		}
        }
		}

}
}
